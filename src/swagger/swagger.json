{
  "openapi": "3.0.0",
  "info": {
    "title": "User Auth Crud Api",
    "description": "The API for the User authentication project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    },
    {
      "url": "http://localhost:4000/api/v1"
    },
    {
      "url": "https://virtserver.swaggerhub.com/JasrajChouhan/User-Auth/1.0.0"
    }
  ],
  "paths": {
    "/users/signin": {
      "post": {
        "summary": "Login a user",
        "description": "User can login using either username and email or email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid login credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout a user",
        "description": "User logout endpoint",
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "summary": "Register a new user",
        "description": "Endpoint for registering a new user with a unique username, email, and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/change/email": {
      "post": {
        "summary": "Update or change email of user",
        "description": "Provide old and new email of user and update the user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user's email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/change/password": {
      "post": {
        "summary": "Update or change the user's password",
        "description": "Provide old password, new password, and confirm password to update the user's password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the user's password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, e.g., passwords do not match or the new password doesn't meet criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, old password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user details",
        "description": "Retrieve the details of the currently authenticated user.",
        "responses": {
          "200": {
            "description": "Successfully retrieved user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "6703427cf2c075b8bb88fb7f"
                            },
                            "username": {
                              "type": "string",
                              "example": "123456"
                            },
                            "email": {
                              "type": "string",
                              "example": "jasrajc954@gmail.com"
                            },
                            "userRole": {
                              "type": "string",
                              "example": "user"
                            },
                            "avatar": {
                              "type": "string",
                              "example": ""
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-07T02:07:56.779Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-16T19:54:40.840Z"
                            },
                            "__v": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": ["User"]
      }
    },
    "/users/refresh/access-token": {
      "post": {
        "summary": "Generate a new access token using the refresh token",
        "description": "Request a new access token by providing a valid refresh token. This endpoint checks if the refresh token is still valid and issues a new access token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzAyOTc2YTJmYTEzMTcwMWI4ZWE2ZjQiLCJ1c2VybmFtZSI6IjY3MDI5NzZhMmZhMTMxNzAxYjhlYTZmNCIsImVtYWlsIjoiamFzcmFqYzk1NEBnbWFpbC5jb20iLCJpYXQiOjE3MjgyMjMwOTIsImV4cCI6MTcyOTA4NzA5Mn0.qORfPtjdSU7gBSSR-PctXPuI5Frh02-_c4QoIlWUwuw"
                  }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated new access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully generate new access token."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token expired or already used",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "example": "Token expired or used."
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user details by userId",
        "description": "Retrieve the details of a user by their unique userId.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the user",
            "schema": {
              "type": "string",
              "example": "6703427cf2c075b8bb88fb7f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "6703427cf2c075b8bb88fb7f"
                            },
                            "username": {
                              "type": "string",
                              "example": "123456"
                            },
                            "email": {
                              "type": "string",
                              "example": "jasrajc954@gmail.com"
                            },
                            "userRole": {
                              "type": "string",
                              "example": "user"
                            },
                            "avatar": {
                              "type": "string",
                              "example": ""
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-07T02:07:56.779Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-16T19:54:40.840Z"
                            },
                            "__v": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get the user details."
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found or invalid userId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found with userId 6703427cf2c075b8bb88fb70"
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error due to invalid ObjectId format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "example": "Cast to ObjectId failed for value \"6703427cf2c075b8bb88fb7r\" (type string) at path \"_id\" for model \"User\""
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users/username/exist": {
      "post": {
        "summary": "Check if a username exists",
        "description": "Verify whether the provided username is valid and available or already taken.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username to be checked for availability",
                    "example": "123456"
                  }
                },
                "required": ["username"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Username is available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "example": "12345645 is available"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid username or username is already taken",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "oneOf": [
                        {
                          "example": "Give a valid username"
                        },
                        {
                          "example": "123456 is not available"
                        }
                      ]
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users/google": {
      "post": {
        "summary": "Google OAuth Login",
        "description": "Log in or register a user using Google OAuth. If the user is logging in for the first time, a new account is created with the provided username and email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username retrieved from Google OAuth",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email retrieved from Google OAuth",
                    "example": "user1@gmail.com"
                  }
                },
                "required": ["username", "email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in or registered user via Google OAuth",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "670529b1adbd8aeaaf757473"
                            },
                            "username": {
                              "type": "string",
                              "example": "johndoeszv38tuxkf.j93ymcvyndcb"
                            },
                            "email": {
                              "type": "string",
                              "example": "user1@gmail.com"
                            },
                            "userRole": {
                              "type": "string",
                              "example": "user"
                            },
                            "avatar": {
                              "type": "string",
                              "example": ""
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-08T12:46:41.455Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-16T19:19:04.303Z"
                            },
                            "__v": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    },
                    "message": {
                      "type": "string",
                      "example": "Please provide all required fields."
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Authentication"]
      }
    }
  },
  "components": {
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Unique username for the user",
            "example": "123456"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user",
            "example": "jasrajc954@gmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Secure password for the user",
            "example": "12!@AaB#$"
          }
        },
        "required": ["username", "email", "password"]
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier of the user",
                    "example": "6703427cf2c075b8bb88fb7f"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username of the user",
                    "example": "123456"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the user",
                    "example": "jasrajc954@gmail.com"
                  },
                  "userRole": {
                    "type": "string",
                    "description": "Role of the user",
                    "example": "user"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "User avatar image URL",
                    "example": ""
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account creation date",
                    "example": "2024-10-07T02:07:56.779Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account last update date",
                    "example": "2024-10-09T04:20:31.945Z"
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "example": "User registered successfully"
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid request data"
          },
          "code": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of the user"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password of the user"
          }
        },
        "required": ["email"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier of the user",
                    "example": "6703427cf2c075b8bb88fb7f"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username of the user",
                    "example": "123456"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the user",
                    "example": "jasrajc954@gmail.com"
                  },
                  "userRole": {
                    "type": "string",
                    "description": "Role of the user",
                    "example": "user"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "User avatar image URL",
                    "example": ""
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account creation date",
                    "example": "2024-10-07T02:07:56.779Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account last update date",
                    "example": "2024-10-09T04:20:31.945Z"
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ChangeEmailRequest": {
        "type": "object",
        "properties": {
          "oldEmail": {
            "type": "string",
            "format": "email",
            "description": "The user's current email"
          },
          "newEmail": {
            "type": "string",
            "format": "email",
            "description": "The new email to update for the user"
          }
        },
        "required": ["oldEmail", "newEmail"]
      },
      "ChangeEmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message indicating the result"
          }
        },
        "example": {
          "message": "Email successfully updated"
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "The user's current password"
          },
          "newPassword": {
            "type": "string",
            "description": "The new password for the user"
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirmation of the new password"
          }
        },
        "required": ["oldPassword", "newPassword", "confirmPassword"]
      },
      "ChangePasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message indicating the result of the password change"
          }
        },
        "example": {
          "message": "Password successfully updated"
        }
      }
    }
  }
}
